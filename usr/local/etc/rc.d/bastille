#!/bin/sh

# Bastille jail startup script
#
# PROVIDE: bastille
# REQUIRE: jail
# KEYWORD: shutdown

# Add the following to /etc/rc.conf[.local] to enable this service
#
# bastille_enable (bool): Set to "NO" by default.
#               Set it to "YES" to enable bastille.
# bastille_conf (bool):   Set to "/usr/local/etc/bastille/bastille.conf" by default.
#               Path to bastile.conf file. Used if bastille_rcorder="YES".
# bastille_list (string): Set to "ALL" by default.
#               Space separated list of jails to start or "ALL" to start all
#               jails.
# bastille_rcorder (bool):       Set to "NO" by default.
#               Set it to "YES" to start all jails in order, defined by
#               rcorder(8). It starts all jails, except jails with "KEYWORD:
#               nostart" in jail.conf. Value of bastille_list is ignored in this
#               case, requires correct path to bastile.conf in bastille_conf
#               var.
#

. /etc/rc.subr

name=bastille
rcvar=${name}_enable

: ${bastille_enable:="NO"}
: ${bastille_conf:="/usr/local/etc/bastille/bastille.conf"}
: ${bastille_startup_delay:=0}

command=/usr/local/bin/${name}
start_cmd="bastille_start"
stop_cmd="bastille_stop"
restart_cmd="bastille_stop && bastille_start"

bastille_start()
{
    local _jailsdir=$(. $bastille_conf; echo $bastille_jailsdir)
    local _priority_list=$(grep -Eo "^priority=\"[0-9]+\"$" ${_jailsdir}/*/boot.conf | sort -t '"' -k2 -n | awk -F'/' '{print $(NF-1)}')

    for _jail in ${_priority_list}; do
        local _boot_file=${_jailsdir}/${_jail}/boot.conf
        # Set defaults if boot file does not exist
        if [ ! -f ${_boot_file} ]; then
            sysrc -f ${_boot_file} boot=on
            sysrc -f ${_boot_file} priority=99
        fi
        local _boot="$(sysrc -f ${_boot_file} -n boot)"
        if [ "${_boot}" = "on" ]; then
            echo "Starting Bastille Container: ${_jail}"
            ${command} start ${_jail}
            sleep ${bastille_startup_delay}
        else
            continue
        fi
    done
}

bastille_stop()
{
    local _jailsdir=$(. $bastille_conf; echo $bastille_jailsdir)
    local _priority_list_rev=$(grep -Eo "^priority=\"[0-9]+\"$" ${_jailsdir}/*/boot.conf | sort -t '"' -k2 -nr | awk -F'/' '{print $(NF-1)}')

    for _jail in ${_priority_list_rev}; do
        echo "Stopping Bastille Container: ${_jail}"
        ${command} stop ${_jail}
    done
}

load_rc_config ${name}
run_rc_command "$1"
